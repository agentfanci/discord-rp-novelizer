# Discord RP Novelizer 0.1
#all right, here we are, gonna... make a file woo
#and. connect it to github somehow we'll see how that g
# oki so this shall be a planning place that is less public
# what do I need to do first before I can do like, anything?
# Class structure, and classes themselves
# Message class: holds a message. Has date & time, sender, channel, and content. Is comparable by date and time
# Novelizer/box? class: has a big bin of messages and can spit them out in various ways
# Scene class: holds a group of messages from the same channel, and has spots for a "next" and "previous" scenes

#Also I gotta figure out how to read files in because idk my dudes
# but it's important to do, heh
# I should research that
# also probably decide what kind of files I'll be looking for- redownloading everything as CSVs shouldn't actually be too bad
#should check how much data it actually is, about, and if having. three versions of it. is all that bad actually. 

#oki am getting things as csvs as I type now so
#...howmst to get them to a program?
File_object.readlines() sounds like what I want!
will return a list of strings, each line is a string! Sounds great

now, how to break down a csv?
also what does it do if the content contains newlines that's. an important point but

or a loop of readline(), I think, yes


I can read csvs into a bunch of message objects now! Yay!
So, what now?

- Make Messages sortable by time
- Make a box for more than one file's worth of messages to go into
- Make sure the entire box can sortable
- Figure out what's going wrong with some of the characters & fix it
- Create Channel class 
- Create Scene class
- Put a function in Channel to break their messages into scenes (a hard/cool part!)
- Make something to sort by tags?
- Be able to sort by day?

hm, the entire system should maybe be just one file... hmmmmmmm welp
I can copy paste stuff bc I've gotten too used to java-

okay, can do either way, but- anyway. 
Use "is" for reference equality, so can 


testing code
dt = "23-May-19 11:26 AM"
date = datetime.strptime(dt, '%d-%b-%y %I:%M %p')
print(date)

fil ="Aquiline Estate - tetsuâ€™s-airship [505976426995122179].csv"
channel = fil.split(" ")[3]
print(channel)
fil = "Aquiline Estate - agents-airship [].csv"
channel = fil.split(" ")[3]
print(channel)